openapi: 3.0.0
info:
  title: Book API
  version: 1.0.0

paths:
  /book:
    get:
      summary: Get paginated list of books
      parameters:
        - name: cursor
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
          description: Offset to start listing books from
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            default: 10
          description: Maximum number of books to return
      responses:
        '200':
          description: Paginated list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
              example:
                - id: 6
                  title: Title 6
                  author: Author 6
                  text: Content of book 6
                - id: 7
                  title: Title 7
                  author: Author 7
                  text: Content of book 7
                - id: 8
                  title: Title 8
                  author: Author 8
                  text: Content of book 8

    post:
      summary: Add a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
            example:
              title: New Title
              author: New Author
              text: New book content
      responses:
        '201':
          description: Book created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'

  /book/{id}:
    get:
      summary: Get a book by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
              examples:
                book1:
                  summary: Book 1
                  value:
                    id: 1
                    title: Title 1
                    author: Author 1
                    text: Text of book 1
                book2:
                  summary: Book 2
                  value:
                    id: 2
                    title: Title 2
                    author: Author 2
                    text: Text of book 2
        '404':
          description: Book not found

    delete:
      summary: Delete a book by ID
      parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
      responses:
        '204':
          description: Book deleted successfully
        '404':
          description: Book not found

components:
  schemas:
    Book:
      type: object
      required:
        - title
        - author
        - text
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: Book Title
        author:
          type: string
          example: Author Name
        text:
          type: string
          example: Full book content goes here
